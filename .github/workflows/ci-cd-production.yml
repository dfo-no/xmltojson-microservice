#    █████████  █████         █████████  ██████████  
#   ███░░░░░███░░███         ███░░░░░███░░███░░░░███ 
#  ███     ░░░  ░███        ███     ░░░  ░███   ░░███
# ░███          ░███       ░███          ░███    ░███
# ░███          ░███       ░███          ░███    ░███
# ░░███     ███ ░███       ░░███     ███ ░███    ███ 
#  ░░█████████  █████       ░░█████████  ██████████  
#   ░░░░░░░░░  ░░░░░         ░░░░░░░░░  ░░░░░░░░░░   
#
## Author: Øyvind Kristiansen (oyvind.kristiansen@dfo.no)
## This workflow will build and deploy the DatahubApi to the testing environment.

name: PRODUCTION ENV CI/CD
on:
  # Manual trigger
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  K8S_NAMESPACE: microservice

jobs:
  build-and-push-image:
    name: Build and Push Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
        with:
          cosign-release: 'v1.11.0'

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to PRODUCTION
    permissions:
      id-token: write
      contents: read
      actions: write
    if: github.ref == 'refs/heads/main'
    needs: build-and-push-image
    runs-on: xmltojson-production-runner
    environment: production
    steps:
      - name: Setup Kubectl
        uses: azure/setup-kubectl@v3
        id: install

      - name: Set the Kubernetes Context
        uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Deploy to the Kubernetes Cluster
        uses: azure/k8s-deploy@v1
        with:
          namespace: ${{ env.K8S_NAMESPACE }}
          manifests: |
            kube/namespace.yaml
            kube/production/deployment.yaml
            kube/production/service.yaml
